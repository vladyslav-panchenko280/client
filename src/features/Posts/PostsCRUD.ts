import { createSlice } from "@reduxjs/toolkit";
import type { PayloadAction } from "@reduxjs/toolkit";
import type {
  PostsArray,
  PostsCRUD,
  PostsCurrentPage,
  PostsPageSize,
  PostsQueryParams,
  PostsStartIndex,
  PostsTotalPages,
  PostsTotalPosts,
} from "lib/interfaces/postsCRUD";

// Initial state for the state slice
const initialState: PostsCRUD = {
  postsInfo: {
    currentPage: 1,
    totalPosts: 0,
    pageSize: 10,
    startIndex: 0,
    totalPages: 1,
  },
  postsData: [],
  queryParams: "",
};

// Create a Redux slice using createSlice from @reduxjs/toolkit
const postsCRUDSlice = createSlice({
  name: "postsCRUD",
  initialState,
  reducers: {
    setCurrentPage: (state, action: PayloadAction<PostsCurrentPage>) => {
      state.postsInfo.currentPage = action.payload;
    },
    setTotalPosts: (state, action: PayloadAction<PostsTotalPosts>) => {
      state.postsInfo.totalPosts = action.payload;
    },
    setPageSize: (state, action: PayloadAction<PostsPageSize>) => {
      state.postsInfo.pageSize = action.payload;
    },
    setStartIndex: (state, action: PayloadAction<PostsStartIndex>) => {
      state.postsInfo.currentPage = action.payload;
    },
    setTotalPages: (state, action: PayloadAction<PostsTotalPages>) => {
      state.postsInfo.currentPage = action.payload;
    },
    setPosts: (state, action: PayloadAction<PostsArray>) => {
      state.postsData = action.payload;
    },
    setQueryParams: (state, action: PayloadAction<PostsQueryParams>) => {
      state.queryParams = action.payload;
    },
  },
});

// Export the action creators generated by createSlice
export const {
  setTotalPages,
  setTotalPosts,
  setCurrentPage,
  setPageSize,
  setPosts,
  setStartIndex,
  setQueryParams,
} = postsCRUDSlice.actions;

// Export the reducer generated by createSlice
export default postsCRUDSlice.reducer;
